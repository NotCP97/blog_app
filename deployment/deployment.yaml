apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog-service
  template:
    metadata:
      labels:
        app: blog-service
    spec:
      containers:
      - name: blog-service
        image: chandrasaini/docker-images:3 
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: ELASTICSEARCH_URL
          value: "http://elasticsearch-service:9200"

        command: ["python3", "main.py"]

        livenessProbe:
          exec:
            command: ["curl", "-f", "http://localhost:8000/health_check"]
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 50

        readinessProbe:
          exec:
            command: ["curl", "-f", "http://localhost:8000/health_check"]
          initialDelaySeconds: 5
          periodSeconds: 15
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: worker
        image: chandrasaini/docker-images:3 
        command: ["supervisord", "-c", "supervisord.conf"]
        env:
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: ELASTICSEARCH_URL
          value: "http://elasticsearch-service:9200"
        - name: WORKERS_COUNT
          value: "1"
        
        livenessProbe:         
          exec:
            command: ["curl", "-f", "http://blog-service:8000/health_check"]
          initialDelaySeconds: 10
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 50
        
        readinessProbe:
          exec:
            command: ["curl", "-f", "http://blog-service:8000/health_check"]
          initialDelaySeconds: 5
          periodSeconds: 15
        

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch-service
  template:
    metadata:
      labels:
        app: elasticsearch-service
    spec:
      containers:
      - name: elasticsearch-service
        image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
        ports:
        - containerPort: 9200
        env:
        - name: discovery.type
          value: single-node
        
        livenessProbe:          
          exec:
            command: ["curl", "-f", "http://localhost:9200/_cat/health"]
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        
        readinessProbe:
          exec:
            command: ["curl", "-f", "http://localhost:9200/_cat/health"]
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-service
  template:
    metadata:
      labels:
        app: redis-service
    spec:
      containers:
      - name: redis-service
        image: redis:latest
        ports:
        - containerPort: 6379
        
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        
        readinessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: blog-service
spec:
  type: NodePort
  selector:
    app: blog-service
  ports:
    - protocol: TCP
      port: 8000           
      targetPort: 8000     
      nodePort: 30001     


---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-service
spec:
  ports:
  - port: 9200
    targetPort: 9200
  selector:
    app: elasticsearch-service


---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis-service



# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: blog-service
# spec:
#   type: LoadBalancer
#   selector:
#     app: blog-service
#   ports:
#     - protocol: TCP
#       port: 80           # Expose externally on port 80
#       targetPort: 8000    # The container's port (from the Deployment)
